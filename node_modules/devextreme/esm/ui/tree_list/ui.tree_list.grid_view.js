/**
 * DevExtreme (esm/ui/tree_list/ui.tree_list.grid_view.js)
 * Version: 22.2.3
 * Build date: Mon Dec 05 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
import treeListCore from "./ui.tree_list.core";
import {
    gridViewModule
} from "../grid_core/ui.grid_core.grid_view";
import {
    deferRender,
    deferUpdate
} from "../../core/utils/common";
var GridView = gridViewModule.views.gridView.inherit({
    _getWidgetAriaLabel: function() {
        return "dxTreeList-ariaTreeList"
    },
    _getTableRoleName: function() {
        return "treegrid"
    }
});
treeListCore.registerModule("gridView", {
    defaultOptions: gridViewModule.defaultOptions,
    controllers: gridViewModule.controllers,
    views: {
        gridView: GridView
    },
    extenders: {
        controllers: {
            resizing: {
                _synchronizeColumns: function() {
                    var wordWrap = this.option("wordWrapEnabled");
                    if (wordWrap) {
                        this._toggleContentMinHeight(true)
                    }
                    this.callBase(arguments);
                    if (wordWrap) {
                        deferUpdate(() => {
                            deferRender(() => {
                                deferUpdate(() => {
                                    this._toggleContentMinHeight(false)
                                })
                            })
                        })
                    }
                },
                _toggleBestFitMode: function(isBestFit) {
                    this.callBase(isBestFit);
                    var $rowsTable = this._rowsView.getTableElement();
                    $rowsTable.find(".dx-treelist-cell-expandable").toggleClass(this.addWidgetPrefix("best-fit"), isBestFit)
                }
            }
        }
    }
});
